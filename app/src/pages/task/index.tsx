import client from 'graphclient/client'
import { useGetTasksQuery, usePolling, useWeb3 } from 'hooks'
import type {
  GetServerSideProps,
  GetServerSidePropsContext,
  NextPage
} from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import { wrapper } from 'state/store'
import { Converter } from 'utils/converter'
import { GetTasksDocument, Task } from '../../../.graphclient'
import { serverSideTranslations } from 'next-i18next/serverSideTranslations'
import TaskView from 'components/Task/TaskListPage/TaskView'
import TaskStatistics from 'components/Organization/Dashboard/TaskStatistics'
import ProfileCard from 'components/Task/TaskListPage/ProfileCard'
import {
  useGetUserStatLazyQuery,
  useGetUserStatQuery,
  useUserStat
} from 'hooks/userstat'

export const getServerSideProps: GetServerSideProps =
  wrapper.getServerSideProps(
    (store) => async (context: GetServerSidePropsContext) => {
      const { data } = await client.query({
        query: GetTasksDocument
      })
      const locale = context.locale ?? ''

      return {
        props: {
          taskList: data.tasks,
          ...(await serverSideTranslations(locale, [
            'common',
            'tasks',
            'header',
            'organization'
          ]))
        }
      }
    }
  )

const TasksPage: NextPage<{ taskList: Task[] }> = ({ taskList }) => {
  const { account } = useWeb3()
  const stats = useUserStat()
  const [tasks, setTasks] = useState(
    taskList.map((t) => Converter.TaskFromQuery(t))
  )
  const { data, startPolling, stopPolling } = useGetTasksQuery()
  usePolling(startPolling, stopPolling)

  useEffect(() => {
    if (data?.tasks) {
      setTasks(data.tasks.map((t) => Converter.TaskFromQuery(t)))
    }
  }, [data])

  return (
    <div className='layout-container pb-20'>
      <Head>
        <title>Buildstream: Tasks</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='grid-layout py-24'>
        <div className='col-span-4 md:col-span-3 lg:col-span-4 2xl:col-span-3 order-2 2xl:order-1'>
          <div className='md:sticky top-[140px] max-h-[calc(100vh-170px)] overflow-auto rounded-2xl scrollbar-hide'>
            <ProfileCard />
            <div className='mt-4 2xl:hidden'>
              <TaskStatistics stat={stats} />
            </div>
          </div>
        </div>
        <div className='col-span-4 md:col-span-5 lg:col-span-8 2xl:col-span-6 order-1 2xl:order-2'>
          <TaskView tasks={tasks} />
        </div>
        <div className='hidden 2xl:block col-span-4 md:col-span-3 lg:col-span-4 2xl:col-span-3 order-3'>
          <div className='2xl:sticky top-[150px] max-h-[calc(100vh-170px)] overflow-auto rounded-2xl scrollbar-hide'>
            <TaskStatistics stat={stats} />
          </div>
        </div>
      </div>
    </div>
  )
}

export default TasksPage
