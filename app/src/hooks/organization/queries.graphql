fragment OrganizationFragment on Organization {
  id
  orgId
  name
  description
  approvers
  signers
  requiredTaskApprovals
  requiredConfirmations
  rewardMultiplier
  rewardSlashMultiplier
  slashRewardEvery
  rewardToken
  isInitialized
  treasury {
    tokens {
      token
      balance
      lockedBalance
    }
  }
  stat {
    id
    proposedTasks
    openedTasks
    assignedTasks
    submittedTasks
    closedTasks
    archivedTasks
    tags
  }
}

query GetOrganization(
  $id: ID!
  $block: Block_height
  $subgraphError: _SubgraphErrorPolicy_! = deny
) {
  organization(id: $id, block: $block, subgraphError: $subgraphError) {
    ...OrganizationFragment
  }
}

query GetOrganizations(
  $skip: Int = 0
  $first: Int = 100
  $orderBy: Organization_orderBy
  $orderDirection: OrderDirection
  $where: Organization_filter
  $block: Block_height
  $subgraphError: _SubgraphErrorPolicy_! = deny
) {
  organizations(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
    subgraphError: $subgraphError
  ) {
    ...OrganizationFragment
  }
}
